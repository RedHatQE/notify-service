# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

maxWorkers: 20
httpPort: 8080
sentryDSN:
apiKeyValue: ""

redis:
  installdep:
    enable: true
  password:
  image:
    registry: quay.io
  cluster:
    enabled: false
  securityContext:
    # readOnlyRootFilesystem: true
    runAsNonRoot: true
    fsGroup: null
  containerSecurityContext:
    runAsUser: null
  redisPort: 6379

smtp:
  endpoint:
    host: ""
    port: 25
    user: ""
    password: ""
    enableTls: true

fromName: Notify
fromEmail: noreply@example.com

persistence:
  enabled: true
  subPath:
  existingClaim:
  accessMode: ReadWriteMany
  size: 1G
  storageClass:
  VolumeName:

templateMountDir: /var/tmp

chatWebhook:
  enabled: false
  gchat: "https://"
  slack: "https://"

activeMQ:
  enabled: false
  cert_mount_path: /var/msg_certs
  # CA certs config
  # ca_certs: |-
  #   -----BEGIN CERTIFICATE-----
  #   ...
  #   -----END CERTIFICATE-----
  # client_cert: |-
  #   -----BEGIN CERTIFICATE-----
  #   ...
  #   -----END CERTIFICATE-----
  # client_key: |-
  #   -----BEGIN RSA PRIVATE KEY-----
  #   ...
  #   -----END RSA PRIVATE KEY-----
  # The CA Server certificate
  ca_certs:
  # The ActiveMQ cliet certificate
  client_cert:
  # The ActiveMQ cliet key
  client_key:
  msg_bus_host_1:
  msg_bus_port_1:
  msg_bus_host_2:
  msg_bus_port_2:
  msg_default_topic:

irc:
  enabled: false
  server:
  port: 6667
  nickname: notify-service-noreply
  password:
  default_target:

replicaCount: 1

image:
  repository: quay.io/waynesun09/notify-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# to enable deploying to an openshift environment
# this will create openshift Route resources
openshift:
  enabled: true
  hosts:

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
