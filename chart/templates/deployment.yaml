apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "..fullname" . }}
  labels:
    {{- include "..labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "..selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "..selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "..serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - env:
        - name: DOMAIN
          {{- if .Values.openshift.enabled }}
          {{- with (index .Values.openshift.hosts 0) }}
          value: {{ . | quote }}
          {{- end }}
          {{- else }}
          value: localhost
          {{- end }}
        - name: PORT
          value: {{ .Values.httpPort | quote }}
        - name: MAX_WORKERS
          value: {{ .Values.maxWorkers | quote }}
        - name: PROJECT_NAME
          value: {{ include "..fullname" . }}
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: "key"
              name: {{ include "..fullname" . }}-secret
        - name: SENTRY_DSN
          value: {{ .Values.sentryDSN | quote }}
        - name: SMTP_HOST
          valueFrom:
            secretKeyRef:
              key: "host"
              name: {{ include "..fullname" . }}-smtp
        - name: SMTP_PORT
          valueFrom:
            secretKeyRef:
              key: "port"
              name: {{ include "..fullname" . }}-smtp
        - name: SMTP_TLS
          valueFrom:
            secretKeyRef:
              key: "tls"
              name: {{ include "..fullname" . }}-smtp
        {{- if .Values.smtp.endpoint.user }}
        - name: SMTP_USER
          valueFrom:
            secretKeyRef:
              key: "user"
              name: {{ include "..fullname" . }}-smtp
        {{- end }}
        {{- if .Values.smtp.endpoint.password }}
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              key: "password"
              name: {{ include "..fullname" . }}-smtp
        {{- end }}
        - name: EMAILS_FROM_NAME
          value: {{ .Values.fromName | quote }}
        - name: EMAILS_FROM_EMAIL
          value: {{ .Values.fromEmail | quote }}
        - name: REDIS_URI
          value: redis://{{ .Release.Name }}-redis-master:{{ .Values.redis.redisPort }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: "redis-password"
              name: {{ .Release.Name }}-redis
        - name: TEMPLATE_MOUNT_DIR
          value: /var/tmp
        {{- if .Values.chatWebhook.enabled }}
        - name: GCHAT_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              key: "gchat"
              name: {{ include "..fullname" . }}-chat
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              key: "slack"
              name: {{ include "..fullname" . }}-chat
        {{- end }}
        {{- if .Values.activeMQ.enabled }}
        - name: CERT_PATH
          value: {{ .Values.activeMQ.cert_mount_path | quote }}
        - name: KEY_FILE_NAME
          valueFrom:
            secretKeyRef:
              key: "client_key"
              name: {{ include "..fullname" . }}-msg-certs
        - name: CERT_FILE_NAME
          valueFrom:
            secretKeyRef:
              key: "client_cert"
              name: {{ include "..fullname" . }}-msg-certs
        - name: CA_CERTS_NAME
          valueFrom:
            secretKeyRef:
              key: "ca_certs"
              name: {{ include "..fullname" . }}-msg-certs
        - name: MSG_BUS_HOST_1
          value: {{ .Values.activeMQ.msg_bus_host_1 | quote }}
        - name: MSG_BUS_PORT_1
          value: {{ .Values.activeMQ.msg_bus_port_1 | quote }}
          {{- if .Values.activeMQ.msg_bus_host_2 }}
        - name: MSG_BUS_HOST_2
          value: {{ .Values.activeMQ.msg_bus_host_2 | quote }}
        - name: MSG_BUS_PORT_2
          value: {{ .Values.activeMQ.msg_bus_port_2 | quote }}
          {{- end }}
          {{- if .Values.activeMQ.msg_default_topic }}
        - name: MSG_DEFAULT_TOPIC
          value: {{ .Values.activeMQ.msg_default_topic | quote }}
          {{- end }}
        {{- end }}
        {{- if .Values.irc.enabled }}
        - name: IRC_SERVER
          value: {{ .Values.irc.server | quote }}
        - name: IRC_SERVER_PORT
          value: {{ .Values.irc.port | quote }}
        - name: IRC_SSL
          value: {{ .Values.irc.ssl | quote }}
        - name: IRC_NICKNAME
          value: {{ .Values.irc.nickname | quote }}
          {{- if .Values.irc.password }}
        - name: IRC_PASSWORD
          value: {{ .Values.irc.password | quote}}
          {{- end }}
          {{- if .Values.irc.default_target }}
        - name: IRC_TARGET
          value: {{ .Values.irc.default_target | quote }}
          {{- end }}
        {{- end }}
        {{- if .Values.jira.enabled }}
        - name: JIRA_ISSUE_TYPE_LIST
          value: {{ .Values.jira.issue_type_list | toJson | indent 4 }}
        - name: JIRA_URL
          value: {{ .Values.jira.url | quote }}
        - name: JIRA_TOKEN
          valueFrom:
            secretKeyRef:
              key: "token"
              name: {{ include "..fullname" . }}-jira
        {{- end }}
        {{- if .Values.bugzilla.enabled }}
        - name: BUGZILLA_URL
          value: {{ .Values.bugzilla.url | quote }}
        - name: BUGZILLA_API_KEY
          valueFrom:
            secretKeyRef:
              key: "api_key"
              name: {{ include "..fullname" . }}-bugzilla
        {{- end }}
        name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: {{ .Values.httpPort }}
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /status
            port: http
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: http
          timeoutSeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
          {{- if and .Values.persistence.enabled }}
          - name: templates
            mountPath: {{ .Values.templateMountDir }}
            {{- if .Values.persistence.subPath }}
            subPath: "{{ .Values.persistence.subPath }}"
            {{- end }}
          {{- end }}
          {{- if and .Values.activeMQ.enabled }}
          - name: msg-certs
            mountPath: {{ .Values.activeMQ.cert_mount_path }}
            readOnly: true
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: templates
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "..fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if and .Values.activeMQ.enabled }}
        - name: msg-certs
          secret:
            secretName: {{ include "..fullname" . }}-msg-certs
        {{- end }}
